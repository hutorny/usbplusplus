name: C/C++ CI

on:
  push:
    branches: [ "master", "feature/**", "fix/**" ]
  pull_request:
    branches: [ "master" ]

jobs:
  linux:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: install dependencies
      run: sudo apt-get update && sudo apt-get install -y libudev-dev meson
    - name: build unit tests with GCC
      run: |
        make CXX=g++ -C tests/ut -j$(nproc) clean
        make CXX=g++ -C tests/ut -j$(nproc) build
    - name: run unit tests
      run: make -C tests/ut run
    - name: build unit tests with clang
      run: |
        make CXX=g++ -C tests/ut -j$(nproc) clean
        make CXX=g++ -C tests/ut -j$(nproc) build
    - name: run unit tests
      run: make -C tests/ut run
    - name: build libusb for functional tests
      working-directory: ext/libusb
      run: |
        ./autogen.sh
        make -j$(nproc)
        sudo make install
    - name: build usbutils for functional tests
      working-directory: ext/usbutils
      run: |
        ./autogen.sh build
    - name: build functional tests
      run: make -C tests/ft -j$(nproc)
    - name: run functional tests
      run: make -C tests/ft run
  compile-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        cxx: [g++, clang++, arm-none-eabi-g++]
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: sudo apt-get update && sudo apt-get install -y clang gcc-arm-none-eabi
    - name: build compile tests
      run: make -C tests/ct clean-all
    - name: build compile tests
      run: make -C tests/ct -j$(nproc) STDS="c++14 c++17 c++20 c++23" CXX=${{ matrix.cxx }} all

